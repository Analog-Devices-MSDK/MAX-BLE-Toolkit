# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = "3.10"

_lr_method = "LALR"

_lr_signature = "leftPLUSMINUSANDORBITWISELSBITWISERSleftMULDIVMODBITWISEANDBITWISEORBITWISEXORleftPOWERBITWISENOTrightUMINUSNOTADD_DEV AND ASSIGN BITWISEAND BITWISELS BITWISENOT BITWISEOR BITWISERS BITWISEXOR CMD DEV DIV ELSE EQUAL FALSE FLOAT FOR GT GTE ID IF INT LPAREN LT LTE MINUS MOD MUL NEWLINE NOT NOTEQUAL OR PLUS POWER PRINT RPAREN SEP STEP STEPIN STEPOUT STR TO TRUE WAIT WHILEprogram : program statement\n               | statementstatement : command NEWLINE\n                 | DEV command NEWLINEstatement : NEWLINEstatement : error NEWLINEcommand : FOR ID ASSIGN expr TO expr optstep optlvlinccommand : FOR ID ASSIGN error TO expr optstep optlvlinccommand : FOR ID ASSIGN expr TO error optstep optlvlinccommand : FOR ID ASSIGN expr TO expr STEP errorcommand : IF boolexpr optlvlinc\n               | IF expr optlvlinccommand : IF error optlvlinccommand : optlvldec ELSE IF boolexpr optlvlinccommand : optlvldec ELSE IF error optlvlinccommand : optlvldec ELSE optlvlinccommand : WHILE boolexpr optlvlinc\n               | WHILE bool optlvlinccommand : WHILE error optlvlinccommand : ADD_DEV ID exprcommand : ADD_DEV ID errorcommand : CMD\n               | CMD paramlistcommand : CMD errorcommand : WAIT exprcommand : WAIT errorcommand : ID ASSIGN exprcommand : ID ASSIGN errorcommand : STEPIN\n               | STEPOUTcommand : PRINT exproptstep : STEP expr\n               | emptyoptlvlinc : STEPIN\n                 | emptyoptlvldec : STEPOUT\n                 | emptyboolexpr : relexpr\n                | boolexpr AND boolexpr\n                | boolexpr OR boolexpr\n                | NOT boolexprrelexpr : expr LT expr\n               | expr LTE expr\n               | expr GT expr\n               | expr GTE expr\n               | expr EQUAL expr\n               | expr NOTEQUAL exprexpr : expr PLUS expr\n            | expr MINUS expr\n            | expr MUL expr\n            | expr DIV expr\n            | expr MOD expr\n            | expr POWER exprexpr : expr BITWISEAND expr\n            | expr BITWISEOR expr\n            | expr BITWISEXOR expr\n            | expr BITWISELS INT\n            | expr BITWISERS INT\n            | BITWISENOT exprexpr : INT\n            | FLOATexpr : STRexpr : IDexpr : boolexpr : LPAREN expr RPARENexpr : MINUS expr %prec UMINUSbool : TRUE\n            | FALSEparamlist : paramlist SEP param\n                 | paramparam : expr\n             | boolexprempty : "

_lr_action_items = {
    "DEV": (
        [
            0,
            1,
            2,
            4,
            19,
            20,
            22,
            54,
        ],
        [
            5,
            5,
            -2,
            -5,
            -1,
            -3,
            -6,
            -4,
        ],
    ),
    "NEWLINE": (
        [
            0,
            1,
            2,
            3,
            4,
            6,
            13,
            15,
            16,
            19,
            20,
            21,
            22,
            25,
            26,
            27,
            28,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            40,
            41,
            42,
            43,
            46,
            47,
            48,
            49,
            50,
            51,
            52,
            53,
            54,
            56,
            57,
            58,
            61,
            62,
            63,
            81,
            82,
            83,
            84,
            87,
            88,
            89,
            90,
            91,
            92,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            118,
            121,
            122,
            123,
            124,
            125,
            126,
            128,
            129,
            131,
            132,
            133,
            134,
            135,
            136,
        ],
        [
            4,
            4,
            -2,
            20,
            -5,
            22,
            -22,
            -29,
            -30,
            -1,
            -3,
            54,
            -6,
            -73,
            -73,
            -73,
            -38,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -73,
            -73,
            -73,
            -73,
            -23,
            -24,
            -70,
            -71,
            -72,
            -25,
            -26,
            -31,
            -4,
            -27,
            -28,
            -11,
            -34,
            -35,
            -12,
            -13,
            -41,
            -66,
            -59,
            -16,
            -17,
            -18,
            -19,
            -20,
            -21,
            -39,
            -40,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -42,
            -43,
            -44,
            -45,
            -46,
            -47,
            -65,
            -73,
            -73,
            -69,
            -14,
            -15,
            -73,
            -73,
            -73,
            -73,
            -33,
            -73,
            -73,
            -7,
            -32,
            -10,
            -9,
            -8,
        ],
    ),
    "error": (
        [
            0,
            1,
            2,
            4,
            9,
            11,
            13,
            14,
            19,
            20,
            22,
            24,
            45,
            54,
            55,
            86,
            119,
            127,
        ],
        [
            6,
            6,
            -2,
            -5,
            27,
            43,
            47,
            52,
            -1,
            -3,
            -6,
            57,
            92,
            -4,
            95,
            117,
            124,
            134,
        ],
    ),
    "FOR": (
        [
            0,
            1,
            2,
            4,
            5,
            19,
            20,
            22,
            54,
        ],
        [
            7,
            7,
            -2,
            -5,
            7,
            -1,
            -3,
            -6,
            -4,
        ],
    ),
    "IF": (
        [
            0,
            1,
            2,
            4,
            5,
            19,
            20,
            22,
            40,
            54,
        ],
        [
            9,
            9,
            -2,
            -5,
            9,
            -1,
            -3,
            -6,
            86,
            -4,
        ],
    ),
    "WHILE": (
        [
            0,
            1,
            2,
            4,
            5,
            19,
            20,
            22,
            54,
        ],
        [
            11,
            11,
            -2,
            -5,
            11,
            -1,
            -3,
            -6,
            -4,
        ],
    ),
    "ADD_DEV": (
        [
            0,
            1,
            2,
            4,
            5,
            19,
            20,
            22,
            54,
        ],
        [
            12,
            12,
            -2,
            -5,
            12,
            -1,
            -3,
            -6,
            -4,
        ],
    ),
    "CMD": (
        [
            0,
            1,
            2,
            4,
            5,
            19,
            20,
            22,
            54,
        ],
        [
            13,
            13,
            -2,
            -5,
            13,
            -1,
            -3,
            -6,
            -4,
        ],
    ),
    "WAIT": (
        [
            0,
            1,
            2,
            4,
            5,
            19,
            20,
            22,
            54,
        ],
        [
            14,
            14,
            -2,
            -5,
            14,
            -1,
            -3,
            -6,
            -4,
        ],
    ),
    "ID": (
        [
            0,
            1,
            2,
            4,
            5,
            7,
            9,
            11,
            12,
            13,
            14,
            17,
            19,
            20,
            22,
            24,
            29,
            30,
            32,
            37,
            45,
            54,
            55,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            75,
            76,
            77,
            78,
            79,
            80,
            86,
            93,
            119,
            120,
            127,
            130,
        ],
        [
            8,
            8,
            -2,
            -5,
            8,
            23,
            35,
            35,
            45,
            35,
            35,
            35,
            -1,
            -3,
            -6,
            35,
            35,
            35,
            35,
            35,
            35,
            -4,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
            35,
        ],
    ),
    "STEPIN": (
        [
            0,
            1,
            2,
            4,
            5,
            19,
            20,
            22,
            25,
            26,
            27,
            28,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            40,
            41,
            42,
            43,
            54,
            82,
            83,
            84,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
            117,
            123,
            124,
            125,
            126,
            128,
            129,
            131,
            133,
        ],
        [
            15,
            15,
            -2,
            -5,
            15,
            -1,
            -3,
            -6,
            61,
            61,
            61,
            -38,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            61,
            61,
            61,
            61,
            -4,
            -41,
            -66,
            -59,
            -39,
            -40,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -42,
            -43,
            -44,
            -45,
            -46,
            -47,
            -65,
            61,
            61,
            -73,
            -73,
            -73,
            61,
            -33,
            61,
            61,
            -32,
        ],
    ),
    "STEPOUT": (
        [
            0,
            1,
            2,
            4,
            5,
            19,
            20,
            22,
            54,
        ],
        [
            16,
            16,
            -2,
            -5,
            16,
            -1,
            -3,
            -6,
            -4,
        ],
    ),
    "PRINT": (
        [
            0,
            1,
            2,
            4,
            5,
            19,
            20,
            22,
            54,
        ],
        [
            17,
            17,
            -2,
            -5,
            17,
            -1,
            -3,
            -6,
            -4,
        ],
    ),
    "ELSE": (
        [
            0,
            1,
            2,
            4,
            5,
            10,
            16,
            18,
            19,
            20,
            22,
            54,
        ],
        [
            -73,
            -73,
            -2,
            -5,
            -73,
            40,
            -36,
            -37,
            -1,
            -3,
            -6,
            -4,
        ],
    ),
    "$end": (
        [
            1,
            2,
            4,
            19,
            20,
            22,
            54,
        ],
        [
            0,
            -2,
            -5,
            -1,
            -3,
            -6,
            -4,
        ],
    ),
    "ASSIGN": (
        [
            8,
            23,
        ],
        [
            24,
            55,
        ],
    ),
    "NOT": (
        [
            9,
            11,
            13,
            29,
            59,
            60,
            86,
            93,
        ],
        [
            29,
            29,
            29,
            29,
            29,
            29,
            29,
            29,
        ],
    ),
    "BITWISENOT": (
        [
            9,
            11,
            13,
            14,
            17,
            24,
            29,
            30,
            32,
            37,
            45,
            55,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            75,
            76,
            77,
            78,
            79,
            80,
            86,
            93,
            119,
            120,
            127,
            130,
        ],
        [
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
            32,
        ],
    ),
    "INT": (
        [
            9,
            11,
            13,
            14,
            17,
            24,
            29,
            30,
            32,
            37,
            45,
            55,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            73,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            86,
            93,
            119,
            120,
            127,
            130,
        ],
        [
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            107,
            108,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
            31,
        ],
    ),
    "FLOAT": (
        [
            9,
            11,
            13,
            14,
            17,
            24,
            29,
            30,
            32,
            37,
            45,
            55,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            75,
            76,
            77,
            78,
            79,
            80,
            86,
            93,
            119,
            120,
            127,
            130,
        ],
        [
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
            33,
        ],
    ),
    "STR": (
        [
            9,
            11,
            13,
            14,
            17,
            24,
            29,
            30,
            32,
            37,
            45,
            55,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            75,
            76,
            77,
            78,
            79,
            80,
            86,
            93,
            119,
            120,
            127,
            130,
        ],
        [
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
            34,
        ],
    ),
    "LPAREN": (
        [
            9,
            11,
            13,
            14,
            17,
            24,
            29,
            30,
            32,
            37,
            45,
            55,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            75,
            76,
            77,
            78,
            79,
            80,
            86,
            93,
            119,
            120,
            127,
            130,
        ],
        [
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
            37,
        ],
    ),
    "MINUS": (
        [
            9,
            11,
            13,
            14,
            17,
            24,
            26,
            29,
            30,
            31,
            32,
            33,
            34,
            35,
            36,
            37,
            38,
            39,
            42,
            44,
            45,
            49,
            51,
            53,
            55,
            56,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            75,
            76,
            77,
            78,
            79,
            80,
            83,
            84,
            85,
            86,
            91,
            93,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            119,
            120,
            123,
            125,
            127,
            130,
            133,
        ],
        [
            30,
            30,
            30,
            30,
            30,
            30,
            65,
            30,
            30,
            -60,
            30,
            -61,
            -62,
            -63,
            -64,
            30,
            -67,
            -68,
            -64,
            65,
            30,
            65,
            65,
            65,
            30,
            65,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            30,
            -66,
            -59,
            65,
            30,
            65,
            30,
            65,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            65,
            65,
            65,
            65,
            65,
            65,
            -65,
            30,
            30,
            65,
            65,
            30,
            30,
            65,
        ],
    ),
    "TRUE": (
        [
            9,
            11,
            13,
            14,
            17,
            24,
            29,
            30,
            32,
            37,
            45,
            55,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            75,
            76,
            77,
            78,
            79,
            80,
            86,
            93,
            119,
            120,
            127,
            130,
        ],
        [
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
            38,
        ],
    ),
    "FALSE": (
        [
            9,
            11,
            13,
            14,
            17,
            24,
            29,
            30,
            32,
            37,
            45,
            55,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            75,
            76,
            77,
            78,
            79,
            80,
            86,
            93,
            119,
            120,
            127,
            130,
        ],
        [
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
            39,
        ],
    ),
    "AND": (
        [
            25,
            28,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            41,
            50,
            82,
            83,
            84,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
        ],
        [
            59,
            -38,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            59,
            59,
            -41,
            -66,
            -59,
            -39,
            -40,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -42,
            -43,
            -44,
            -45,
            -46,
            -47,
            -65,
            59,
        ],
    ),
    "OR": (
        [
            25,
            28,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            41,
            50,
            82,
            83,
            84,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            116,
        ],
        [
            60,
            -38,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            60,
            60,
            -41,
            -66,
            -59,
            -39,
            -40,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -42,
            -43,
            -44,
            -45,
            -46,
            -47,
            -65,
            60,
        ],
    ),
    "PLUS": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            51,
            53,
            56,
            83,
            84,
            85,
            91,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            123,
            125,
            133,
        ],
        [
            64,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            64,
            64,
            64,
            64,
            64,
            -66,
            -59,
            64,
            64,
            64,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            64,
            64,
            64,
            64,
            64,
            64,
            -65,
            64,
            64,
            64,
        ],
    ),
    "MUL": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            51,
            53,
            56,
            83,
            84,
            85,
            91,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            123,
            125,
            133,
        ],
        [
            66,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            66,
            66,
            66,
            66,
            66,
            -66,
            -59,
            66,
            66,
            66,
            66,
            66,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            66,
            66,
            66,
            66,
            66,
            66,
            -65,
            66,
            66,
            66,
        ],
    ),
    "DIV": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            51,
            53,
            56,
            83,
            84,
            85,
            91,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            123,
            125,
            133,
        ],
        [
            67,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            67,
            67,
            67,
            67,
            67,
            -66,
            -59,
            67,
            67,
            67,
            67,
            67,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            67,
            67,
            67,
            67,
            67,
            67,
            -65,
            67,
            67,
            67,
        ],
    ),
    "MOD": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            51,
            53,
            56,
            83,
            84,
            85,
            91,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            123,
            125,
            133,
        ],
        [
            68,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            68,
            68,
            68,
            68,
            68,
            -66,
            -59,
            68,
            68,
            68,
            68,
            68,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            68,
            68,
            68,
            68,
            68,
            68,
            -65,
            68,
            68,
            68,
        ],
    ),
    "POWER": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            51,
            53,
            56,
            83,
            84,
            85,
            91,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            123,
            125,
            133,
        ],
        [
            69,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            69,
            69,
            69,
            69,
            69,
            -66,
            -59,
            69,
            69,
            69,
            69,
            69,
            69,
            69,
            69,
            -53,
            69,
            69,
            69,
            -57,
            -58,
            69,
            69,
            69,
            69,
            69,
            69,
            -65,
            69,
            69,
            69,
        ],
    ),
    "BITWISEAND": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            51,
            53,
            56,
            83,
            84,
            85,
            91,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            123,
            125,
            133,
        ],
        [
            70,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            70,
            70,
            70,
            70,
            70,
            -66,
            -59,
            70,
            70,
            70,
            70,
            70,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            70,
            70,
            70,
            70,
            70,
            70,
            -65,
            70,
            70,
            70,
        ],
    ),
    "BITWISEOR": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            51,
            53,
            56,
            83,
            84,
            85,
            91,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            123,
            125,
            133,
        ],
        [
            71,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            71,
            71,
            71,
            71,
            71,
            -66,
            -59,
            71,
            71,
            71,
            71,
            71,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            71,
            71,
            71,
            71,
            71,
            71,
            -65,
            71,
            71,
            71,
        ],
    ),
    "BITWISEXOR": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            51,
            53,
            56,
            83,
            84,
            85,
            91,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            123,
            125,
            133,
        ],
        [
            72,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            72,
            72,
            72,
            72,
            72,
            -66,
            -59,
            72,
            72,
            72,
            72,
            72,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            72,
            72,
            72,
            72,
            72,
            72,
            -65,
            72,
            72,
            72,
        ],
    ),
    "BITWISELS": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            51,
            53,
            56,
            83,
            84,
            85,
            91,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            123,
            125,
            133,
        ],
        [
            73,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            73,
            73,
            73,
            73,
            73,
            -66,
            -59,
            73,
            73,
            73,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            73,
            73,
            73,
            73,
            73,
            73,
            -65,
            73,
            73,
            73,
        ],
    ),
    "BITWISERS": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            51,
            53,
            56,
            83,
            84,
            85,
            91,
            94,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            123,
            125,
            133,
        ],
        [
            74,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            74,
            74,
            74,
            74,
            74,
            -66,
            -59,
            74,
            74,
            74,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            74,
            74,
            74,
            74,
            74,
            74,
            -65,
            74,
            74,
            74,
        ],
    ),
    "LT": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            83,
            84,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            115,
        ],
        [
            75,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            75,
            75,
            -66,
            -59,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -65,
        ],
    ),
    "LTE": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            83,
            84,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            115,
        ],
        [
            76,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            76,
            76,
            -66,
            -59,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -65,
        ],
    ),
    "GT": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            83,
            84,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            115,
        ],
        [
            77,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            77,
            77,
            -66,
            -59,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -65,
        ],
    ),
    "GTE": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            83,
            84,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            115,
        ],
        [
            78,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            78,
            78,
            -66,
            -59,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -65,
        ],
    ),
    "EQUAL": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            83,
            84,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            115,
        ],
        [
            79,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            79,
            79,
            -66,
            -59,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -65,
        ],
    ),
    "NOTEQUAL": (
        [
            26,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            42,
            44,
            49,
            83,
            84,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            115,
        ],
        [
            80,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -64,
            80,
            80,
            -66,
            -59,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -65,
        ],
    ),
    "SEP": (
        [
            28,
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            46,
            48,
            49,
            50,
            82,
            83,
            84,
            96,
            97,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            109,
            110,
            111,
            112,
            113,
            114,
            115,
            118,
        ],
        [
            -38,
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            93,
            -70,
            -71,
            -72,
            -41,
            -66,
            -59,
            -39,
            -40,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -42,
            -43,
            -44,
            -45,
            -46,
            -47,
            -65,
            -69,
        ],
    ),
    "RPAREN": (
        [
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            83,
            84,
            85,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            115,
        ],
        [
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -66,
            -59,
            115,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -65,
        ],
    ),
    "TO": (
        [
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            83,
            84,
            94,
            95,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            115,
        ],
        [
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -66,
            -59,
            119,
            120,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -65,
        ],
    ),
    "STEP": (
        [
            31,
            33,
            34,
            35,
            36,
            38,
            39,
            83,
            84,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            107,
            108,
            115,
            123,
            124,
            125,
        ],
        [
            -60,
            -61,
            -62,
            -63,
            -64,
            -67,
            -68,
            -66,
            -59,
            -48,
            -49,
            -50,
            -51,
            -52,
            -53,
            -54,
            -55,
            -56,
            -57,
            -58,
            -65,
            127,
            130,
            130,
        ],
    ),
}

_lr_action = {}
for _k, _v in _lr_action_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_action:
            _lr_action[_x] = {}
        _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {
    "program": (
        [
            0,
        ],
        [
            1,
        ],
    ),
    "statement": (
        [
            0,
            1,
        ],
        [
            2,
            19,
        ],
    ),
    "command": (
        [
            0,
            1,
            5,
        ],
        [
            3,
            3,
            21,
        ],
    ),
    "optlvldec": (
        [
            0,
            1,
            5,
        ],
        [
            10,
            10,
            10,
        ],
    ),
    "empty": (
        [
            0,
            1,
            5,
            25,
            26,
            27,
            40,
            41,
            42,
            43,
            116,
            117,
            123,
            124,
            125,
            126,
            129,
            131,
        ],
        [
            18,
            18,
            18,
            62,
            62,
            62,
            62,
            62,
            62,
            62,
            62,
            62,
            128,
            128,
            128,
            62,
            62,
            62,
        ],
    ),
    "boolexpr": (
        [
            9,
            11,
            13,
            29,
            59,
            60,
            86,
            93,
        ],
        [
            25,
            41,
            50,
            82,
            96,
            97,
            116,
            50,
        ],
    ),
    "expr": (
        [
            9,
            11,
            13,
            14,
            17,
            24,
            29,
            30,
            32,
            37,
            45,
            55,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            75,
            76,
            77,
            78,
            79,
            80,
            86,
            93,
            119,
            120,
            127,
            130,
        ],
        [
            26,
            44,
            49,
            51,
            53,
            56,
            44,
            83,
            84,
            85,
            91,
            94,
            44,
            44,
            98,
            99,
            100,
            101,
            102,
            103,
            104,
            105,
            106,
            109,
            110,
            111,
            112,
            113,
            114,
            44,
            49,
            123,
            125,
            133,
            133,
        ],
    ),
    "relexpr": (
        [
            9,
            11,
            13,
            29,
            59,
            60,
            86,
            93,
        ],
        [
            28,
            28,
            28,
            28,
            28,
            28,
            28,
            28,
        ],
    ),
    "bool": (
        [
            9,
            11,
            13,
            14,
            17,
            24,
            29,
            30,
            32,
            37,
            45,
            55,
            59,
            60,
            64,
            65,
            66,
            67,
            68,
            69,
            70,
            71,
            72,
            75,
            76,
            77,
            78,
            79,
            80,
            86,
            93,
            119,
            120,
            127,
            130,
        ],
        [
            36,
            42,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
            36,
        ],
    ),
    "paramlist": (
        [
            13,
        ],
        [
            46,
        ],
    ),
    "param": (
        [
            13,
            93,
        ],
        [
            48,
            118,
        ],
    ),
    "optlvlinc": (
        [
            25,
            26,
            27,
            40,
            41,
            42,
            43,
            116,
            117,
            126,
            129,
            131,
        ],
        [
            58,
            63,
            81,
            87,
            88,
            89,
            90,
            121,
            122,
            132,
            135,
            136,
        ],
    ),
    "optstep": (
        [
            123,
            124,
            125,
        ],
        [
            126,
            129,
            131,
        ],
    ),
}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
    for _x, _y in zip(_v[0], _v[1]):
        if not _x in _lr_goto:
            _lr_goto[_x] = {}
        _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
    ("S' -> program", "S'", 1, None, None, None),
    ("program -> program statement", "program", 2, "p_program", "hci_parse.py", 16),
    ("program -> statement", "program", 1, "p_program", "hci_parse.py", 17),
    ("statement -> command NEWLINE", "statement", 2, "p_statement", "hci_parse.py", 31),
    (
        "statement -> DEV command NEWLINE",
        "statement",
        3,
        "p_statement",
        "hci_parse.py",
        32,
    ),
    ("statement -> NEWLINE", "statement", 1, "p_statement_newline", "hci_parse.py", 52),
    (
        "statement -> error NEWLINE",
        "statement",
        2,
        "p_statement_bad",
        "hci_parse.py",
        58,
    ),
    (
        "command -> FOR ID ASSIGN expr TO expr optstep optlvlinc",
        "command",
        8,
        "p_command_for",
        "hci_parse.py",
        66,
    ),
    (
        "command -> FOR ID ASSIGN error TO expr optstep optlvlinc",
        "command",
        8,
        "p_command_for_bad_initial",
        "hci_parse.py",
        70,
    ),
    (
        "command -> FOR ID ASSIGN expr TO error optstep optlvlinc",
        "command",
        8,
        "p_command_for_bad_final",
        "hci_parse.py",
        74,
    ),
    (
        "command -> FOR ID ASSIGN expr TO expr STEP error",
        "command",
        8,
        "p_command_for_bad_step",
        "hci_parse.py",
        78,
    ),
    (
        "command -> IF boolexpr optlvlinc",
        "command",
        3,
        "p_command_if",
        "hci_parse.py",
        82,
    ),
    ("command -> IF expr optlvlinc", "command", 3, "p_command_if", "hci_parse.py", 83),
    (
        "command -> IF error optlvlinc",
        "command",
        3,
        "p_command_if_bad",
        "hci_parse.py",
        87,
    ),
    (
        "command -> optlvldec ELSE IF boolexpr optlvlinc",
        "command",
        5,
        "p_command_elseif",
        "hci_parse.py",
        91,
    ),
    (
        "command -> optlvldec ELSE IF error optlvlinc",
        "command",
        5,
        "p_command_elseif_bad",
        "hci_parse.py",
        95,
    ),
    (
        "command -> optlvldec ELSE optlvlinc",
        "command",
        3,
        "p_command_else",
        "hci_parse.py",
        99,
    ),
    (
        "command -> WHILE boolexpr optlvlinc",
        "command",
        3,
        "p_command_while",
        "hci_parse.py",
        103,
    ),
    (
        "command -> WHILE bool optlvlinc",
        "command",
        3,
        "p_command_while",
        "hci_parse.py",
        104,
    ),
    (
        "command -> WHILE error optlvlinc",
        "command",
        3,
        "p_command_while_bad",
        "hci_parse.py",
        108,
    ),
    (
        "command -> ADD_DEV ID expr",
        "command",
        3,
        "p_command_devadd",
        "hci_parse.py",
        112,
    ),
    (
        "command -> ADD_DEV ID error",
        "command",
        3,
        "p_command_devadd_bad",
        "hci_parse.py",
        116,
    ),
    ("command -> CMD", "command", 1, "p_command_cmd", "hci_parse.py", 120),
    ("command -> CMD paramlist", "command", 2, "p_command_cmd", "hci_parse.py", 121),
    ("command -> CMD error", "command", 2, "p_command_cmd_bad", "hci_parse.py", 128),
    ("command -> WAIT expr", "command", 2, "p_command_wait", "hci_parse.py", 132),
    ("command -> WAIT error", "command", 2, "p_command_wait_bad", "hci_parse.py", 136),
    (
        "command -> ID ASSIGN expr",
        "command",
        3,
        "p_command_assignvar",
        "hci_parse.py",
        140,
    ),
    (
        "command -> ID ASSIGN error",
        "command",
        3,
        "p_command_assignvar_bad",
        "hci_parse.py",
        147,
    ),
    ("command -> STEPIN", "command", 1, "p_command_lvlchange", "hci_parse.py", 151),
    ("command -> STEPOUT", "command", 1, "p_command_lvlchange", "hci_parse.py", 152),
    ("command -> PRINT expr", "command", 2, "p_command_print", "hci_parse.py", 156),
    ("optstep -> STEP expr", "optstep", 2, "p_optstep", "hci_parse.py", 160),
    ("optstep -> empty", "optstep", 1, "p_optstep", "hci_parse.py", 161),
    ("optlvlinc -> STEPIN", "optlvlinc", 1, "p_optlvlinc", "hci_parse.py", 168),
    ("optlvlinc -> empty", "optlvlinc", 1, "p_optlvlinc", "hci_parse.py", 169),
    ("optlvldec -> STEPOUT", "optlvldec", 1, "p_optlvldec", "hci_parse.py", 176),
    ("optlvldec -> empty", "optlvldec", 1, "p_optlvldec", "hci_parse.py", 177),
    ("boolexpr -> relexpr", "boolexpr", 1, "p_boolexpr", "hci_parse.py", 184),
    (
        "boolexpr -> boolexpr AND boolexpr",
        "boolexpr",
        3,
        "p_boolexpr",
        "hci_parse.py",
        185,
    ),
    (
        "boolexpr -> boolexpr OR boolexpr",
        "boolexpr",
        3,
        "p_boolexpr",
        "hci_parse.py",
        186,
    ),
    ("boolexpr -> NOT boolexpr", "boolexpr", 2, "p_boolexpr", "hci_parse.py", 187),
    ("relexpr -> expr LT expr", "relexpr", 3, "p_relexpr", "hci_parse.py", 196),
    ("relexpr -> expr LTE expr", "relexpr", 3, "p_relexpr", "hci_parse.py", 197),
    ("relexpr -> expr GT expr", "relexpr", 3, "p_relexpr", "hci_parse.py", 198),
    ("relexpr -> expr GTE expr", "relexpr", 3, "p_relexpr", "hci_parse.py", 199),
    ("relexpr -> expr EQUAL expr", "relexpr", 3, "p_relexpr", "hci_parse.py", 200),
    ("relexpr -> expr NOTEQUAL expr", "relexpr", 3, "p_relexpr", "hci_parse.py", 201),
    ("expr -> expr PLUS expr", "expr", 3, "p_expr_binary", "hci_parse.py", 205),
    ("expr -> expr MINUS expr", "expr", 3, "p_expr_binary", "hci_parse.py", 206),
    ("expr -> expr MUL expr", "expr", 3, "p_expr_binary", "hci_parse.py", 207),
    ("expr -> expr DIV expr", "expr", 3, "p_expr_binary", "hci_parse.py", 208),
    ("expr -> expr MOD expr", "expr", 3, "p_expr_binary", "hci_parse.py", 209),
    ("expr -> expr POWER expr", "expr", 3, "p_expr_binary", "hci_parse.py", 210),
    ("expr -> expr BITWISEAND expr", "expr", 3, "p_expr_bitwise", "hci_parse.py", 214),
    ("expr -> expr BITWISEOR expr", "expr", 3, "p_expr_bitwise", "hci_parse.py", 215),
    ("expr -> expr BITWISEXOR expr", "expr", 3, "p_expr_bitwise", "hci_parse.py", 216),
    ("expr -> expr BITWISELS INT", "expr", 3, "p_expr_bitwise", "hci_parse.py", 217),
    ("expr -> expr BITWISERS INT", "expr", 3, "p_expr_bitwise", "hci_parse.py", 218),
    ("expr -> BITWISENOT expr", "expr", 2, "p_expr_bitwise", "hci_parse.py", 219),
    ("expr -> INT", "expr", 1, "p_expr_number", "hci_parse.py", 226),
    ("expr -> FLOAT", "expr", 1, "p_expr_number", "hci_parse.py", 227),
    ("expr -> STR", "expr", 1, "p_expr_string", "hci_parse.py", 231),
    ("expr -> ID", "expr", 1, "p_expr_variable", "hci_parse.py", 235),
    ("expr -> bool", "expr", 1, "p_expr_bool", "hci_parse.py", 239),
    ("expr -> LPAREN expr RPAREN", "expr", 3, "p_expr_group", "hci_parse.py", 243),
    ("expr -> MINUS expr", "expr", 2, "p_expr_unary", "hci_parse.py", 247),
    ("bool -> TRUE", "bool", 1, "p_bool", "hci_parse.py", 251),
    ("bool -> FALSE", "bool", 1, "p_bool", "hci_parse.py", 252),
    (
        "paramlist -> paramlist SEP param",
        "paramlist",
        3,
        "p_paramlist",
        "hci_parse.py",
        256,
    ),
    ("paramlist -> param", "paramlist", 1, "p_paramlist", "hci_parse.py", 257),
    ("param -> expr", "param", 1, "p_param_expr", "hci_parse.py", 265),
    ("param -> boolexpr", "param", 1, "p_param_expr", "hci_parse.py", 266),
    ("empty -> <empty>", "empty", 0, "p_empty", "hci_parse.py", 270),
]
